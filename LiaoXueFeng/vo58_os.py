#/usr/bin/python3
#coding:utf-8

#*******************************************************************************
# 操作文件和目录
# 如果我们要操作文件、目录，可以在命令行下面输入操作系统提供的各种命令来完成。比如dir、cp等命令。
# 如果要在Python程序中执行这些目录和文件的操作怎么办？其实操作系统提供的命令只是简单地调用了操作系统提供的接口函数，Python内置的os模块也可以直接调用操作系统提供的接口函数。
# 打开Python交互式命令行，我们来看看如何使用os模块的基本功能：
#*******************************************************************************

import os
print(os.name) # 操作系统类型
# 如果是posix，说明系统是Linux、Unix或Mac OS X，如果是nt，就是Windows系统。
print(os.uname())

#*******************************************************************************
# 环境变量
# 在操作系统中定义的环境变量，全部保存在os.environ这个变量中，可以直接查看：
#*******************************************************************************

# print(os.environ)

#*******************************************************************************
# 要获取某个环境变量的值，可以调用os.environ.get('key')：
#*******************************************************************************

#*******************************************************************************
# 操作文件和目录
# 操作文件和目录的函数一部分放在os模块中，一部分放在os.path模块中，这一点要注意一下。查看、创建和删除目录可以这么调用：
#*******************************************************************************
# 查看当前目录的绝对路径:
print(os.path.abspath('.'))
# 在某个目录下创建一个新目录，首先把新目录的完整路径表示出来:
print(os.path.join('/home/uxeix', 'testdir'))
# os.mkdir('/home/uxeix/testdir')
os.rmdir('/home/uxeix/testdir')
